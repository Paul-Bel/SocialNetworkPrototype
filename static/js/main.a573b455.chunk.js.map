{"version":3,"sources":["components/Profile/Profile.module.css","components/Dialogs/Dialogs.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Users/users.module.css","components/Dialogs/DialogItem/DialogsItem.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Posts.module.css","components/Header/Header.module.css","components/PreLoading/Preloading.module.css","components/Navbar/Navbar.module.css","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Settings/Settings.tsx","components/Music/Music.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","Redux/dialog_reducer.ts","components/Dialogs/DialogsItemContainer.tsx","components/Dialogs/Dialogs.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Posts.tsx","Redux/profile_reducer.ts","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","Redux/withRoute.tsx","components/Profile/ProfileContainer.tsx","Redux/user_reducer.ts","img/USERS.svg","components/Users/UsersP/Users.tsx","components/PreLoading/Preloading.tsx","api/api.ts","components/Users/UsersContainer.tsx","components/Header/Header.tsx","Redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","App.tsx","Redux/rudux_Store.ts","index.tsx"],"names":["module","exports","Navbar","className","s","nav","item","to","activLink","News","Settings","props","Music","DialogItem","p","dialog","active","id","name","Message","messag","message","changeDialogPost","addDialogPost","initialState","dialogNick","messages","messageBody","dialogsReducer","state","action","type","value","newDialogPost","trim","concat","DialogsItemContainer","connect","store","dialogsPages","dispatch","updateNewMessageBody","changeDialogsPostAC","sendMessage","messagesElement","map","m","dialogs","itemDialogs","d","onChange","e","currentTarget","onClick","ProfileInfo","src","alt","info","photoSmall","profilePage","photos","small","large","fullName","Posts","post","likescounte","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","userId","undefined","newPostText","addPostProfile","changePostProfile","setProfile","profileReducer","addNewPost","MyPostsContainer","updateText","addNewText","postElement","addText","Profile","content","withRouter","WithRouterProfile","Component","location","useLocation","navigate","useNavigate","params","useParams","router","this","axios","get","then","response","data","React","items","totalCount","error","currentPage","totalPageSize","isFetching","followingInProgress","userReducer","user","followed","us","isFetchingD","filter","f","Users","console","log","users","pageArr","i","push","styles","activePages","notActivePage","page","upDateUsers","usersPhoto","USERS","disabled","some","changeFollowingInProgress","delete","withCredentials","headers","resultCode","changeUnFollow","changeFollow","status","Preloading","style","loader","instance","create","baseURL","UserAPI","UsersAPIContainer","changeFetching","respons","setUsers","changePages","follow","unFollow","UsersContainer","user_id","Header","header","nickName","isAuth","login","initialStateAuth","email","fieldsErrors","authReducer","HeaderContainer","setAuthHeader","auth","App","path","element","reducers","combineReducers","createStore","window","renderEnteerTree","ReactDOM","render","getState","bind","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.a573b455.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2bVbl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__wEPyW\",\"active\":\"Dialogs_active__3Ir0j\",\"itemDialogs\":\"Dialogs_itemDialogs__1xG0x\",\"messages\":\"Dialogs_messages__1qLzh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"ProfileInfo_info__33qwx\",\"photoSmall\":\"ProfileInfo_photoSmall__sihW0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPhoto\":\"users_usersPhoto__g3Sqh\",\"activePages\":\"users_activePages__1Q9yI\",\"notActivePage\":\"users_notActivePage__2IePW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemDialogs\":\"DialogsItem_itemDialogs__20vU3\",\"active\":\"DialogsItem_active__1s7-B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"MyPosts_post__2Bqj9\",\"addText\":\"MyPosts_addText__1Lxto\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Posts_content__3o3pC\",\"item\":\"Posts_item__2YUVg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2eVZF\",\"nickName\":\"Header_nickName__1vETf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Preloading_loader__1ZZFm\",\"load1\":\"Preloading_load1__1kRSQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2jcuY\",\"item\":\"Navbar_item__1KvGe\",\"activLink\":\"Navbar_activLink__2jFm0\"};","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <div className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/profile/\"} className={s.activLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/users/\"} className={s.activLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/dialogs/\"} className={s.activLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/news/\"} className={s.activLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/music/\"} className={s.activLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/settings/\"} className={s.activLink}>Sattings</NavLink>\r\n            </div>\r\n\r\n\r\n        </div>);\r\n}\r\n","import React from \"react\";\r\n\r\nexport const News = () => {\r\n    return (\r\n        <div>\r\n            <h1>Test News Components</h1>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\ntype PropsType = {\r\n}\r\nexport const Settings = (props: PropsType) => {\r\n    return (\r\n        <div>\r\n            <h1>Test Settings</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\n\r\n\r\nexport const Music = () => {\r\n    return (\r\n        <h1>Test Music Components</h1>\r\n    )\r\n}","import {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport p from './DialogsItem.module.css'\r\n\r\ntype ItemProps = {\r\n    name: string;\r\n    id: number;\r\n}\r\nexport const DialogItem = (props: ItemProps) => {\r\n\r\n    return (\r\n        <div className={p.dialog + ' ' + p.active}>\r\n            <NavLink to={'/dialogs/' + props.id}> {props.name} </NavLink>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport p from './Message.module.css'\r\n\r\ntype Mess = {\r\n    message: string;\r\n}\r\nexport const Message = (props: Mess) => {\r\n    return (\r\n        <div className={p.messag}>{props.message}</div>\r\n    )\r\n}\r\n\r\n\r\n","\r\nexport type TYPE_DISPATCH_CREATOR = string\r\ntype ActionPropsType = { type: TYPE_DISPATCH_CREATOR, value?: string }\r\ntype PostType = { id: number, message: string, likescounte: number }\r\ntype dialogType = { id: number, name: string }\r\ntype dialogNickType = Array<dialogType>\r\ntype messageType = { id: number, message: string }\r\ntype messagesType = Array<messageType>\r\ntype dialogsPagesType = { dialogNick: dialogNickType, messages: messagesType, messageBody: string }\r\ntype siteBarType = { id: number }\r\n\r\nconst changeDialogPost = 'changeDialogPost'\r\nconst addDialogPost = 'addDialogPost'\r\nexport const addDialogCreatorAC = () => ({type: addDialogPost})\r\nexport const changeDialogsPostAC = (value: string) => {\r\n    return ({type: changeDialogPost, value} as const )\r\n}\r\n\r\ntype InitialStateType = {\r\n    dialogNick: { id: number, name: string }[],\r\n    messages: { id: number, message: string }[]\r\n    messageBody: string\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    dialogNick: [\r\n        {id: 1, name: 'Anatoliy'},\r\n        {id: 2, name: 'Sergey'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Nikifor'},\r\n        {id: 5, name: 'Arsrniy'},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Hello\"},\r\n        {id: 2, message: \"How are you?\"},\r\n        {id: 3, message: \"I`am learn to React\"},\r\n    ],\r\n    messageBody: \"\"\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action: ActionPropsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case  changeDialogPost: {\r\n            return {\r\n                ...state,\r\n                messageBody: action.value ? action.value : ''\r\n            }\r\n        }\r\n            // if (action.value)\r\n            //     state.messageBody = action.value;\r\n            // return state;\r\n\r\n        case addDialogPost: {\r\n            let newDialogPost = {id: 3, message: state.messageBody.trim()}\r\n            return {\r\n                ...state,\r\n                messages: state.messages.concat(newDialogPost),\r\n                messageBody: ''\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default dialogsReducer","import {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../Redux/rudux_Store\";\r\nimport {addDialogCreatorAC, changeDialogsPostAC} from \"../../Redux/dialog_reducer\"\r\nimport React, {Dispatch} from \"react\";\r\n\r\n\r\nlet mapStateToProps = (store: AppStateType) => {\r\n    return ({\r\n        dialogNick: store.dialogsPages.dialogNick,\r\n        messages: store.dialogsPages.messages,\r\n        messageBody: store.dialogsPages.messageBody,\r\n    })\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n    return {\r\n        updateNewMessageBody: (value: string) => {\r\n            dispatch(changeDialogsPostAC(value))},\r\n        sendMessage: () => {\r\n            dispatch(addDialogCreatorAC())}\r\n    }\r\n}\r\n\r\nexport const DialogsItemContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)","import React, {ChangeEvent} from \"react\";\r\nimport p from './Dialogs.module.css'\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\n\r\ntype DialogNickType = { id: number, name: string }\r\ntype MessageType = { id: number, message: string }\r\n\r\ntype messagePost = {\r\n    dialogNick: DialogNickType[],\r\n    messages: MessageType[],\r\n    messageBody: string\r\n    updateNewMessageBody: (value: string) => void\r\n    sendMessage: () => void\r\n}\r\nexport const Dialogs: React.FC<messagePost> = (props) => {\r\n    const dialogsElements = () =>\r\n        props.dialogNick.map(d => <DialogItem name={d.name} id={d.id}/>)\r\n    const messagesElement = props.messages.map(m => <Message message={m.message}/>)\r\n    const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.updateNewMessageBody(e.currentTarget.value)\r\n    }\r\n    const addPost = () => props.sendMessage()\r\n\r\n    return (\r\n        <div className={p.dialogs}>\r\n            <div className={p.itemDialogs}>\r\n                {dialogsElements()}\r\n            </div>\r\n            <div className={p.messages}>\r\n                {messagesElement}\r\n                <div>\r\n                    <textarea\r\n                        value={props.messageBody}\r\n                        onChange={onChangeHandler}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button\r\n                        onClick={addPost}\r\n                    >add\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\nimport {ProfileType} from \"../../../Redux/profile_reducer\";\r\n\r\n\r\ntype ProfileInfoType = {profilePage: ProfileType}\r\nexport const ProfileInfo = (props: ProfileInfoType) => {\r\n    return (\r\n        <div>\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/7/7f/Istanbul_IMG_7257_1725.jpg\"\r\n                 alt=\"\"/>\r\n            <div  className={s.info}>\r\n               <img className={s.photoSmall} src={props.profilePage.photos.small} alt=\"картинка маленькая\"/>\r\n                <img className={s.photoSmall} src={props.profilePage.photos.large} alt=\"картинка большая\"/>\r\n               <div> {props.profilePage.fullName} </div>\r\n                Ava+discrip\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport p from './Posts.module.css';\r\n\r\ntype MyPostsMessage = {\r\n    message: string,\r\n    likescounte: number,\r\n}\r\n\r\n\r\nexport const Posts = (props: MyPostsMessage) => {\r\n    return (\r\n        <div className={p.post}>\r\n            <div className={p.item}>\r\n                <img\r\n                    src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTOlaWqOUHlXgQBKHi5jFoXsPTmxDI6SjFVzA&usqp=CAU\"\r\n                    alt=\"\"/>\r\n                {props.message}\r\n                <div><span>like </span>{props.likescounte}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","export type PostType = { id: number, message: string, likescounte: number, }\r\nexport type ContactType = {\r\n    facebook: string | null,\r\n    website: string | null,\r\n    vk: string | null,\r\n    twitter: string | null,\r\n    instagram: string | null,\r\n    youtube: string | null,\r\n    github: string | null,\r\n    mainLink: string | null,\r\n}\r\nexport type PhotoProfileType = { small: string | undefined, \"large\": string | undefined,}\r\nexport type ProfileType = {\r\n    aboutMe: string | null,\r\n    contacts: ContactType\r\n    lookingForAJob: boolean | null,\r\n    lookingForAJobDescription: string | null,\r\n    fullName: string | null,\r\n    userId: number | null,\r\n    photos: PhotoProfileType,\r\n    post: PostType[],\r\n    newPostText: string, }\r\nexport type ForProfileServetType = {\r\n    aboutMe: string | null,\r\n    contacts: ContactType\r\n    lookingForAJob: boolean | null,\r\n    lookingForAJobDescription: string | null,\r\n    fullName: string | null,\r\n    userId: number,\r\n    photos: PhotoProfileType,\r\n}\r\nlet initialState: ProfileType = {\r\n    aboutMe: null,\r\n    contacts: <ContactType> {\r\n        facebook: null,\r\n        website: null,\r\n        vk: null,\r\n        twitter: null,\r\n        instagram: null,\r\n        youtube: null,\r\n        github: null,\r\n        mainLink: null,\r\n    },\r\n    lookingForAJob: true,\r\n    lookingForAJobDescription: null,\r\n    fullName: null,\r\n    userId: null,\r\n    photos:<PhotoProfileType> {\r\n        small: undefined,\r\n        large: undefined,\r\n    },\r\n    post: [\r\n        {id: 1, message: \"It's me. What are you doing?\", likescounte: 5},\r\n        {id: 2, message: \"I'am learn\", likescounte: 13},\r\n    ],\r\n    newPostText: '',\r\n}\r\n// let initialState: ProfileType = {\r\n//     aboutMe: \"я круто чувак 1001%\",\r\n//     contacts: <ContactType> {\r\n//         facebook: \"facebook.com\",\r\n//         website: null,\r\n//         vk: \"vk.com/dimych\",\r\n//         twitter: \"https://twitter.com/@sdf\",\r\n//         instagram: \"instagra.com/sds\",\r\n//         youtube: null,\r\n//         github: \"github.com\",\r\n//         mainLink: \"null\",\r\n//     },\r\n//     lookingForAJob: true,\r\n//     lookingForAJobDescription: \"не ищу, а дурачусь\",\r\n//     fullName: \"samurai dimych\",\r\n//     userId: 2,\r\n//     photos: {\r\n//         small: \"https://social-network.samuraijs.com/activecontent/images/users/2/user-small.jpg?v=0\",\r\n//         \"large\": \"https://social-network.samuraijs.com/activecontent/images/users/2/user.jpg?v=0\"\r\n//     },\r\n//     post: [\r\n//         {id: 1, message: \"It's me. What are you doing?\", likescounte: 5},\r\n//         {id: 2, message: \"I'am learn\", likescounte: 13},\r\n//     ],\r\n//     newPostText: '',\r\n// }\r\n\r\ntype ActionReducerType = AddPostProfileType | ChangePostProfileType | SetProfileType\r\nexport type AddPostProfileType = {type: 'addPost'}\r\nexport type ChangePostProfileType = {type: 'changePost', action: string}\r\nexport type SetProfileType = {type: 'SET_PROFILE', action: ForProfileServetType}\r\n\r\nexport const addPostProfile = (): AddPostProfileType => ({type: 'addPost'})\r\nexport const changePostProfile = (action: string):ChangePostProfileType => ({type: 'changePost', action})\r\nexport const setProfile = (action: ForProfileServetType):SetProfileType => ({type: 'SET_PROFILE', action})\r\n\r\nconst profileReducer = (state: ProfileType = initialState, action: ActionReducerType): ProfileType => {\r\n    switch (action.type) {\r\n        case 'changePost':\r\n            return {...state, newPostText: action.action};\r\n        case 'addPost': {\r\n            let addNewPost = {id: 6, message: state.newPostText, likescounte: 0}\r\n            if (state.newPostText.trim()) {\r\n                return {...state, post: [...state.post, addNewPost], newPostText: ''}\r\n            }\r\n            return state\r\n        }\r\n        case 'SET_PROFILE':\r\n            // debugger\r\n            return {...state,\r\n                aboutMe: action.action.aboutMe,\r\n                contacts: {...action.action.contacts},\r\n                lookingForAJob: action.action.lookingForAJob,\r\n                lookingForAJobDescription: action.action.lookingForAJobDescription,\r\n                fullName: action.action.fullName,\r\n                userId: action.action.userId,\r\n                photos: {...action.action.photos},\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default profileReducer","import {connect} from \"react-redux\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {AppStateType} from \"../../../Redux/rudux_Store\";\r\nimport {addPostProfile, changePostProfile} from \"../../../Redux/profile_reducer\";\r\nimport {Dispatch} from \"react\";\r\n\r\n\r\nexport const mapStateToProps = (store: AppStateType) => {\r\n    return {profilePage: store.profilePage}\r\n}\r\n\r\nexport const mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n    return {\r\n        updateText: (value: string) => {\r\n            dispatch(changePostProfile(value))\r\n        },\r\n        addNewText: () => {\r\n            dispatch(addPostProfile())\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)","import React, {ChangeEvent} from 'react';\r\nimport p from './MyPosts.module.css';\r\nimport {Posts} from \"./Post/Posts\";\r\n\r\ntype PostType = {id: number, message: string, likescounte: number,}\r\n\r\ntype ProfilePropsType = {\r\n    profilePage: { post: PostType[], newPostText: string }\r\n    updateText: (value: string) => void\r\n    addNewText: () => void\r\n    // dispatch: (action: ActionPropsType) => void\r\n}\r\n\r\nexport const MyPosts = (props: ProfilePropsType) => {\r\n    const postElement = props.profilePage.post.map(p => <Posts key={p.id} message={p.message} likescounte={p.likescounte}/>)\r\n    // let NewPost = React.createRef<HTMLTextAreaElement>()\r\n    let addPost = () => {\r\n        props.addNewText()\r\n    }\r\n    const changeText = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.updateText(e.currentTarget.value)\r\n    }\r\n    return (<div>\r\n            <h3>My post</h3>\r\n            <div className={p.addText}>\r\n                <textarea\r\n                    // ref={NewPost}\r\n                    value={props.profilePage.newPostText}\r\n                    onChange={changeText}\r\n                > </textarea>\r\n                <div>\r\n                    <button onClick={addPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={p.post}>\r\n                {postElement}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport p from './Profile.module.css';\r\nimport '../../App.css'\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\nimport {MapPropsProfile} from \"./ProfileContainer\";\r\n\r\nexport const Profile = (props: MapPropsProfile) => {\r\n\r\n    return (\r\n        <div className={p.content}>\r\n            <ProfileInfo profilePage={props.profilePage}/>\r\n            <MyPostsContainer/>\r\n            {/*<MyPosts*/}\r\n            {/*    profilePage={props.profilePage}*/}\r\n            {/*    dispatch={props.dispatch}*/}\r\n\r\n            {/*/>*/}\r\n        </div>\r\n    );\r\n}\r\n","import React, {ComponentType} from \"react\";\r\n\r\nimport {\r\n    useLocation, useMatch,\r\n    useNavigate,\r\n    useParams,\r\n} from \"react-router-dom\";\r\n\r\nfunction withRouter(Component: any) {\r\n    function ComponentWithRouterProp(props: any) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\nexport default withRouter","import React from 'react';\r\nimport p from './Profile.module.css';\r\nimport '../../App.css'\r\nimport axios from 'axios';\r\nimport {Profile} from \"./Profile\";\r\nimport {AppStateType} from \"../../Redux/rudux_Store\";\r\nimport {\r\n    addPostProfile,\r\n    changePostProfile, ForProfileServetType,\r\n    ProfileType, setProfile\r\n} from \"../../Redux/profile_reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport withRouter from \"../../Redux/withRoute\";\r\n\r\n\r\nclass ProfileContainer extends React.Component<MapPropsProfile &{router:{params:{userId: number}}}> {\r\n\r\n    componentDidMount() {\r\n        let id = this.props.router.params.userId\r\n        if(!this.props.router.params.userId){id = 2}\r\n        //debugger and this.props/////\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${id}`)\r\n            .then(response => {\r\n                this.props.setProfile(response.data)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={p.content}>\r\n                <Profile\r\n                    profilePage={this.props.profilePage}\r\n                    changePostProfile={this.props.changePostProfile}\r\n                    addPostProfile={addPostProfile}\r\n                    setProfile={setProfile}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport type MapStateProfileProps = { profilePage: ProfileType }\r\nexport type MapDispathToProps = {\r\n    addPostProfile: () => void\r\n    changePostProfile: (action: string) => void\r\n    setProfile: (action: ForProfileServetType) => void\r\n}\r\nexport type MapPropsProfile = MapStateProfileProps & MapDispathToProps\r\n\r\nexport const MapStateProfile = (store: AppStateType): MapStateProfileProps => {\r\n    return ({\r\n        profilePage: store.profilePage,\r\n    })\r\n}\r\n\r\nlet WithRouterProfile = withRouter(ProfileContainer)\r\nexport default connect(MapStateProfile, {\r\n    changePostProfile,\r\n    addPostProfile,\r\n    setProfile,\r\n})(WithRouterProfile)","export type ItemsType = {\r\n    name: string,\r\n    id: number,\r\n    photos: { small: string | null, large: string | null },\r\n    status: string | null,\r\n    followed: boolean,\r\n}\r\nexport type UseresType = {\r\n    items: ItemsType[]\r\n    totalCount: number,\r\n    error: string | null,\r\n    currentPage: number,\r\n    totalPageSize: number,\r\n    isFetching: boolean,\r\n    followingInProgress: Array<number>\r\n}\r\ntype USER_AC_TYPE = FOLLOW_AC\r\n    | UN_FOLLOW_AC | CHANGE_PAGE_USERS_TYPE\r\n    | SET_USERS_TYPE | CHANGE_FETCHING | changeFollowingInProgress\r\n\r\ntype FOLLOW_AC = { type: 'FOLLOW_', id: number }\r\ntype UN_FOLLOW_AC = { type: 'UN_FOLLOW_', id: number }\r\ntype SET_USERS_TYPE = { type: \"SET_USERS\", items: UseresType }\r\ntype CHANGE_PAGE_USERS_TYPE = { type: \"CHANGE_USERS_PAGE\", currentPage: number }\r\ntype CHANGE_FETCHING = { type: \"CHANGE_Fetching\", isFetching: boolean }\r\ntype changeFollowingInProgress = { type: \"CHANGE_Disabled\", followingInProgress: number, isFetchingD: boolean }\r\n\r\nconst initialState: UseresType = {\r\n    items: [] as ItemsType[],\r\n    totalCount: 0,\r\n    error: null,\r\n    currentPage: 1,\r\n    totalPageSize: 10,\r\n    isFetching: true,\r\n    followingInProgress: [1, 2],\r\n}\r\n\r\nconst userReducer = (state: UseresType = initialState, action: USER_AC_TYPE): UseresType => {\r\n\r\n    switch (action.type) {\r\n        case 'FOLLOW_':\r\n            return {\r\n                ...state,\r\n                items: state.items.map(user => {\r\n                    if (user.id === action.id) {\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user\r\n                })\r\n            };\r\n        case 'UN_FOLLOW_':\r\n            return {\r\n                ...state,\r\n                items: state.items.map(us => {\r\n                    if (us.id === action.id) {\r\n                        return {...us, followed: false}\r\n                    }\r\n                    return us\r\n                })\r\n            };\r\n        case \"SET_USERS\":\r\n            return {\r\n                ...state,\r\n                items: [...action.items.items],\r\n                totalCount: action.items.totalCount,\r\n                error: action.items.error,\r\n                currentPage: action.items.currentPage,\r\n            };\r\n        case \"CHANGE_USERS_PAGE\":\r\n            return {...state, currentPage: action.currentPage};\r\n        case \"CHANGE_Fetching\":\r\n            return {...state, isFetching: action.isFetching};\r\n        case \"CHANGE_Disabled\":\r\n            return {\r\n                ...state, followingInProgress:\r\n                    action.isFetchingD ?\r\n                            [action.followingInProgress]\r\n                            : state.followingInProgress.filter(f => f != action.followingInProgress)\r\n\r\n            };\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const follow = (user_id: number): FOLLOW_AC => ({type: 'FOLLOW_', id: user_id})\r\nexport const unFollow = (user_id: number): UN_FOLLOW_AC => ({type: 'UN_FOLLOW_', id: user_id})\r\nexport const setUsers = (items: UseresType): SET_USERS_TYPE => ({type: \"SET_USERS\", items})\r\nexport const changePages = (currentPage: number): CHANGE_PAGE_USERS_TYPE => ({type: \"CHANGE_USERS_PAGE\", currentPage})\r\nexport const changeFetching = (isFetching: boolean): CHANGE_FETCHING => ({type: \"CHANGE_Fetching\", isFetching})\r\nexport const changeFollowingInProgress = (followingInProgress: number, isFetchingD: boolean): changeFollowingInProgress => ({\r\n    type: \"CHANGE_Disabled\", followingInProgress, isFetchingD,})\r\n\r\nexport default userReducer","export default __webpack_public_path__ + \"static/media/USERS.ebe73738.svg\";","import React from \"react\";\r\nimport styles from '../users.module.css'\r\nimport USERS from \"../../../img/USERS.svg\";\r\nimport {UseresType} from \"../../../Redux/user_reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport type UserPropsType = MapDispatchToPropsType & MapStateToPropsType\r\nexport type MapStateToPropsType = { users: UseresType, currentPage: number }\r\nexport type MapDispatchToPropsType = {\r\n    changeFollow: (id: number) => void\r\n    changeUnFollow: (id: number) => void\r\n    setUsers?: (items: UseresType) => void\r\n    changePages: (page: number) => void\r\n    upDateUsers: (page: number) => void\r\n    changeFetching: (fetching: boolean) => void\r\n    changeFollowingInProgress: (followingInProgress: number, isFetchingD: boolean) => void\r\n}\r\n\r\nexport const Users = (props: UserPropsType) => {\r\n    console.log(props.users.items)\r\n    let pageArr = []\r\n    let totalPages = 10\r\n    // Math.ceil(this.props.items.totalCount / this.props.items.totalPageSize)\r\n    //нужно научится выдавать юзеров порционно\r\n    for (let i = 1; i <= totalPages; i++) {\r\n        pageArr.push(i)\r\n    }\r\n\r\n    const onClockHandler = (page: number) => {\r\n        props.upDateUsers(page)\r\n    }\r\n    return (\r\n        <div>\r\n            {pageArr.map(p => {\r\n\r\n                return (<span\r\n                    className={props.currentPage === p ?\r\n                        styles.activePages : styles.notActivePage}\r\n                    key={p}\r\n                    onClick={() => onClockHandler(p)}>{p + ' '}</span>)\r\n            })}\r\n                     {\r\n                props.users.items.map(us => <div key={us.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={`/profile/${us.id}`}>\r\n                        <img className={styles.usersPhoto}\r\n                             src={us.photos.small != null ? us.photos.small : USERS} alt=\"\"/>\r\n                        </NavLink>\r\n                        </div>\r\n                    <div>\r\n                        {!us.followed ?\r\n                            <button\r\n                                disabled={props.users.followingInProgress.some(s => s == us.id)}\r\n                                onClick={() => {\r\n                                    props.changeFollowingInProgress(us.id, true)\r\n                                axios.post(`https://social-network.samuraijs.com/api/1.0/follow/${us.id}`,\r\n                                    {}, {withCredentials: true,\r\n                                        headers: {'API-KEY':\"3c089002-10aa-48c7-80c6-fa863be7bb86\"}})\r\n                                .then(response => {\r\n                                    props.changeFollowingInProgress(us.id, false)\r\n                                        if (response.data.resultCode === 0) {\r\n                                            props.changeFollow(us.id)\r\n                                        }\r\n                                    })\r\n                            }\r\n\r\n                            }>Follow</button> :\r\n                            <button\r\n                                disabled={props.users.followingInProgress.some(s => s == us.id)}\r\n                                onClick={() =>{\r\n                                    props.changeFollowingInProgress(us.id, true)\r\n                                axios.delete(`https://social-network.samuraijs.com/api/1.0/follow/${us.id}`,\r\n                                     {withCredentials: true, headers: {'API-KEY':\"3c089002-10aa-48c7-80c6-fa863be7bb86\"}})\r\n                                    .then(response => {\r\n                                        props.changeFollowingInProgress(us.id, false)\r\n                                        if (response.data.resultCode === 0) {\r\n                                            props.changeUnFollow(us.id)\r\n                                        }\r\n                                    })\r\n                            }}>Unfollow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n                    <span>\r\n                    <div>{us.name}</div>\r\n                    <div>{us.status}</div>\r\n                </span>\r\n                    <span>\r\n                    <div>{'us.location.city'}</div>\r\n                    <div>{'us.location.country'}</div>\r\n                </span>\r\n                </div>)\r\n            }</div>\r\n    )\r\n}","import React from \"react\";\r\nimport style from './Preloading.module.css'\r\n\r\nexport const Preloading = () => {\r\n    return <div className={style.loader}>Loading...</div>\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {'API-KEY': \"3c089002-10aa-48c7-80c6-fa863be7bb86\"},\r\n})\r\n\r\nconst URL = 'https://social-network.samuraijs.com/api/1.0/'\r\n\r\nexport const UserAPI = {\r\n    getUsers(currentPage: number, totalPageSize: number) {\r\n        return instance.get(`users?page=${currentPage}&count=${totalPageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    upDateUser(currentPage: number, totalPageSize: number) {\r\n        return instance.get(`${URL}users?page=${currentPage}\r\n        &count=${totalPageSize}`)\r\n            .then(response => response.data)\r\n    }\r\n}\r\n\r\n\r\n// axios.get<UseresType>\r\n// (`https://social-network.samuraijs.com/api/1.0/users?page=\r\n//         ${this.props.currentPage+100}\r\n//         &count=${this.props.users.totalPageSize}`, {})","import React from \"react\";\r\nimport {AppStateType} from \"../../Redux/rudux_Store\";\r\nimport {\r\n    follow,\r\n    setUsers,\r\n    unFollow,\r\n    UseresType,\r\n    changePages,\r\n    changeFetching,\r\n    changeFollowingInProgress\r\n} from \"../../Redux/user_reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {Users} from \"./UsersP/Users\";\r\nimport {Preloading} from \"../PreLoading/Preloading\";\r\nimport {UserAPI} from \"../../api/api\";\r\n\r\nexport type OwnProps = {}\r\nexport type UserPropsType = MapDispatchToPropsType & MapStateToPropsType\r\nexport type MapStateToPropsType = { users: UseresType, currentPage: number }\r\nexport type MapDispatchToPropsType = {\r\n    follow: (id: number) => void\r\n    unFollow: (id: number) => void\r\n    setUsers: (items: UseresType) => void\r\n    changePages: (page: number) => void\r\n    changeFetching: (fetching: boolean) => void\r\n    changeFollowingInProgress: (followingInProgress: number, isFetchingD: boolean) => void\r\n}\r\nconst mapStateToProps = (store: AppStateType): MapStateToPropsType => {\r\n\r\n    return ({\r\n        users: store.users,\r\n        currentPage: store.users.currentPage,\r\n    })\r\n}\r\n\r\nclass UsersAPIContainer extends React.Component<UserPropsType> {\r\n\r\n    componentDidMount() {\r\n        UserAPI.getUsers(this.props.currentPage, this.props.users.totalPageSize)\r\n            .then(respons => {\r\n                console.log(respons)\r\n                this.props.setUsers && this.props.setUsers(respons)\r\n            })\r\n    }\r\n\r\n    upDateUsers = (page: number) => {\r\n        this.props.changeFetching && this.props.changeFetching(true)\r\n        UserAPI.upDateUser(page, this.props.users.totalPageSize)\r\n            .then(respons => {\r\n                this.props.changeFetching && this.props.changeFetching(false)\r\n                this.props.setUsers && this.props.setUsers(respons)\r\n                this.props.changePages(page)\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {!this.props.users.isFetching ? < Preloading/> :\r\n                <Users\r\n                    users={this.props.users}\r\n                    currentPage={this.props.currentPage}\r\n                    changeFollow={this.props.follow}\r\n                    changePages={this.props.changePages}\r\n                    changeUnFollow={this.props.unFollow}\r\n                    upDateUsers={this.upDateUsers}\r\n                    changeFetching={this.props.changeFetching}\r\n                    changeFollowingInProgress={this.props.changeFollowingInProgress}\r\n                />\r\n            }\r\n        </>\r\n    }\r\n}\r\n\r\nexport const UsersContainer = connect<MapStateToPropsType, MapDispatchToPropsType, OwnProps, AppStateType>(mapStateToProps,\r\n    {\r\n    follow,\r\n    unFollow,\r\n    setUsers,\r\n    changePages,\r\n    changeFetching,\r\n    changeFollowingInProgress,\r\n})(UsersAPIContainer)\r\n\r\n","import React from 'react';\r\nimport p from './Header.module.css';\r\nimport '../../App.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {MapStateToProps, MapToProps} from \"./HeaderContainer\";\r\n\r\ntype HeaderPropsType = {\r\n    data: {\r\n        id: number | null,\r\n        login: string | null,\r\n        email: string | null,\r\n    },\r\n    isAuth: boolean,\r\n}\r\n\r\nexport const Header = (props: HeaderPropsType) => {\r\n    return (\r\n    <header className={p.header}>\r\n        <div>\r\n            <img\r\n                src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:\r\n                ANd9GcQeCm48YLb7mh4rFyJNq202jtVys3xZlhMQNg&usqp=CAU\"\r\n                alt=\"\"/>\r\n<div className={p.nickName}>\r\n            {props.isAuth ? props.data.login :\r\n            <NavLink to={'/logit'}>Login</NavLink>}\r\n</div>\r\n        </div>\r\n\r\n    </header>);\r\n}","export type AuthHeaderType = { type: 'AUTH_ME', action: InitialStateAuthType }\r\ntype ActionAuthType = AuthHeaderType\r\nexport type InitialStateAuthType = {\r\n    \"data\": {\r\n        \"id\": number | null,\r\n        \"login\": string | null,\r\n        \"email\": string | null,\r\n    },\r\n    \"messages\": [],\r\n    \"fieldsErrors\": [],\r\n    \"resultCode\": number\r\n    isAuth: boolean,\r\n}\r\n\r\nlet initialStateAuth: InitialStateAuthType = {\r\n    data: {\r\n        id: null,\r\n        login: null,\r\n        email: null,\r\n    },\r\n    messages: [],\r\n    fieldsErrors: [],\r\n    resultCode: 0,\r\n    isAuth: false,\r\n}\r\n\r\n\r\nconst authReducer = (state = initialStateAuth, action: ActionAuthType): InitialStateAuthType => {\r\n\r\n    switch (action.type) {\r\n        case'AUTH_ME': {\r\n            return { ...action.action}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthHeader = (state: InitialStateAuthType): AuthHeaderType => ({type: 'AUTH_ME', action: state})\r\nexport default authReducer","import React from 'react';\r\nimport '../../App.css'\r\nimport {Header} from \"./Header\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {AuthHeaderType, InitialStateAuthType, setAuthHeader} from \"../../Redux/auth-reducer\";\r\nimport {AppStateType} from \"../../Redux/rudux_Store\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component<MapToProps> {\r\n    componentDidMount() {\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`,\r\n            {withCredentials: true})\r\n            .then(response => {\r\n                if(response.data.resultCode === 0)\r\n                this.props.setAuthHeader({...response.data, isAuth: true})\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (<Header\r\n            data={this.props.data}\r\n            isAuth={this.props.isAuth}\r\n        />)\r\n    }\r\n}\r\n\r\nconst MapStateToPropsHeader = (store: AppStateType): InitialStateAuthType => {\r\n    return store.auth\r\n}\r\nexport type MapDispatchToProps = { setAuthHeader: (state: InitialStateAuthType) => void }\r\nexport type MapStateToProps = InitialStateAuthType\r\nexport type MapToProps = MapDispatchToProps & MapStateToProps\r\n\r\nexport default connect(MapStateToPropsHeader, {setAuthHeader})(HeaderContainer);\r\n// export const HeaderContainer = connect (MapStateToPropsHeader, {setAuthHeader})(HeaderContainerC)\r\n// export default HeaderContainer","import React from 'react';\r\nimport './App.css';\r\nimport {Navbar} from \"./components/Navbar/Navbar\";\r\nimport {News} from \"./components/News/News\";\r\nimport {Settings} from \"./components/Settings/Settings\";\r\nimport {BrowserRouter, Route, Routes} from \"react-router-dom\";\r\nimport {Music} from \"./components/Music/Music\";\r\nimport {AppStateType} from \"./Redux/rudux_Store\";\r\nimport {DialogsItemContainer} from \"./components/Dialogs/DialogsItemContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport { UsersContainer } from './components/Users/UsersContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\n\r\n\r\nexport type TYPE_DISPATCH_CREATOR = string\r\n\r\ntype ActionPropsType = {\r\n    type: TYPE_DISPATCH_CREATOR,\r\n    value?: string\r\n}\r\ntype AppDataType = {\r\n    state: AppStateType\r\n    dispatch: (action: ActionPropsType) => void\r\n}\r\n\r\nconst App = (props: AppDataType) => {\r\n\r\n    return (\r\n\r\n        <BrowserRouter>\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className={'app-wrapper-content'}>\r\n\r\n                    <Routes>\r\n                        <Route path={'/profile'} element={<ProfileContainer/>}>\r\n                            <Route path='/profile:userId'\r\n                                   element={<ProfileContainer/>}/>\r\n                        </Route>\r\n                        <Route path='/dialogs'\r\n                               element={<DialogsItemContainer/>}>\r\n                            <Route path='/dialogs:id'\r\n                                   element={<DialogsItemContainer/>}/>\r\n                        </Route>\r\n                        <Route path='/users' element={<UsersContainer/>}/>\r\n                        <Route path='/news' element={<News/>}/>\r\n                        <Route path='/settings' element={<Settings/>}/>\r\n                        <Route path='/music' element={<Music/>}/>\r\n                    </Routes>\r\n                </div>\r\n\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n// <Route path=\"profile\" element={<Profile/>}/>","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile_reducer\";\r\nimport dialogsReducer from \"./dialog_reducer\";\r\nimport userReducer from \"./user_reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPages: dialogsReducer,\r\n    users: userReducer,\r\n    auth: authReducer,\r\n    //siteBar: () => {}\r\n})\r\n\r\n\r\nexport type AppStateType = ReturnType<typeof reducers>\r\n\r\nconst store = createStore(reducers)\r\n\r\n//@ts-ignore\r\nwindow.store = store;\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from \"./Redux/rudux_Store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nexport const renderEnteerTree = () => {\r\n    ReactDOM.render(\r\n        <Provider store={store}>\r\n        <App\r\n            state={store.getState()}\r\n            dispatch={store.dispatch.bind(store)}\r\n        />,\r\n        </Provider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nrenderEnteerTree()\r\nstore.subscribe(renderEnteerTree)\r\n\r\n// store.subscribe(renderEnteerTree)\r\n\r\n\r\n\r\n"],"sourceRoot":""}