{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","common/PreLoading/Preloading.module.css","components/Navbar/Navbar.module.css","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Settings/Settings.tsx","components/Music/Music.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","common/validation/validators.ts","common/form/FormControl.tsx","components/Dialogs/Dialogs.tsx","Redux/dialog_reducer.ts","common/hoc/withRedirect.tsx","components/Dialogs/DialogsItemContainer.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Posts.tsx","components/Profile/MyPosts/MyPosts.tsx","api/api.ts","Redux/profile_reducer.ts","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","Redux/withRoute.tsx","components/Profile/ProfileContainer.tsx","Redux/user_reducer.ts","img/USERS.svg","components/Users/UsersP/Users.tsx","common/PreLoading/Preloading.tsx","Redux/user-selectors.ts","components/Users/UsersContainer.tsx","components/Header/Header.tsx","Redux/auth_reducer.ts","components/Header/HeaderContainer.tsx","components/Header/Login.tsx","Redux/app_reducer.ts","App.tsx","Redux/rudux_Store.ts","index.tsx","common/form/FormControl.module.css","components/Profile/Profile.module.css","components/Dialogs/Dialogs.module.css","components/Users/users.module.css","components/Dialogs/DialogItem/DialogsItem.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Posts.module.css","components/Header/Header.module.css"],"names":["module","exports","Navbar","className","s","nav","item","to","activLink","News","Settings","props","Music","DialogItem","p","dialog","active","id","name","Message","messag","message","required","value","undefined","maxLength","length","FormControl","input","meta","metaError","touched","error","formControl","children","TextArea","restProps","child","InputForm","textLength100","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","addDialogPost","initialState","dialogNick","messages","dialogsReducer","state","action","type","newDialogPost","payload","trim","concat","MapStToProps","isAuth","auth","withRedirect","Component","RenderComponent","this","React","connect","compose","store","dialogsPages","dispatch","sendMessage","addDialogCreator","messagesElement","map","m","dialogs","itemDialogs","d","console","log","addMayPost","ProfileStatus","editMode","status","onStatusChange","e","setState","currentTarget","changeEditModeOff","UpDateStatusAPI","onDoubleClick","changeEditModeOn","bind","autoFocus","onBlur","onChange","ProfileInfo","info","src","profilePage","photos","large","alt","fullName","Posts","post","likescounte","PostReduxForm","instance","axios","create","withCredentials","baseURL","headers","UserAPI","currentPage","totalPageSize","get","then","response","data","resultCode","delete","warn","ProfileAPI","userID","put","authMe","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","userId","small","newPostText","addPostProfile","getUserStatus","profileReducer","addNewPost","MyPostsContainer","postElement","addText","addMyPost","Profile","content","withRouter","location","useLocation","navigate","useNavigate","params","useParams","router","ProfileContainer","setProfileAPI","getUserStatusAPI","prevProps","changePostProfile","authID","items","totalCount","isFetching","followingInProgress","changeFetching","changeFollowingInProgress","isFetchingD","userReducer","user","followed","us","filter","f","Users","pageArr","i","push","styles","activePages","notActivePage","onClick","page","upDateUsers","users","usersPhoto","USERS","disabled","some","changeUnFollowUser","changeFollowUser","Preloading","style","loader","getUsers","getCurrentPage","UsersAPIContainer","UsersContainer","getState","setUsers","Header","header","nickName","login","logUot","initialStateAuth","email","fieldsErrors","setAuthHeader","auth_reducer","checkAuth","HeaderContainer","validateLengt30","placeholder","errorLogin","loginUser","password","rememberMe","a","stopSubmit","_error","formData","initialized","appReducer","App","initializaTC","path","element","DialogsItemContainer","app","rootReduser","combineReducers","formReducer","createStore","applyMiddleware","thankMiddleware","window","renderEnteerTree","ReactDOM","render","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.7452bd9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"ProfileInfo_info__33qwx\",\"photoSmall\":\"ProfileInfo_photoSmall__sihW0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Preloading_loader__1orSv\",\"load1\":\"Preloading_load1__3BD35\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2jcuY\",\"item\":\"Navbar_item__1KvGe\",\"activLink\":\"Navbar_activLink__2jFm0\"};","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <div className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/profile/\"} className={s.activLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/users/\"} className={s.activLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/dialogs/\"} className={s.activLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/news/\"} className={s.activLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/music/\"} className={s.activLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={\"/settings/\"} className={s.activLink}>Settings</NavLink>\r\n            </div>\r\n\r\n\r\n        </div>);\r\n}\r\n","import React from \"react\";\r\n\r\nexport const News = () => {\r\n    return (\r\n        <div>\r\n            <h1>Test News Components</h1>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\ntype PropsType = {\r\n}\r\nexport const Settings = (props: PropsType) => {\r\n    return (\r\n        <div>\r\n            <h1>Test Settings</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\n\r\n\r\nexport const Music = () => {\r\n    return (\r\n        <h1>Test Music Components</h1>\r\n    )\r\n}","import {Navigate, NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport p from './DialogsItem.module.css'\r\n\r\ntype ItemProps = {\r\n    name: string;\r\n    id: number;\r\n}\r\nexport const DialogItem = (props: ItemProps) => {\r\n\r\n    return (\r\n        <div className={p.dialog + ' ' + p.active}>\r\n            <NavLink to={'/dialogs/' + props.id}> {props.name} </NavLink>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport p from './Message.module.css'\r\n\r\ntype Mess = {\r\n    message: string;\r\n}\r\nexport const Message = (props: Mess) => {\r\n    return (\r\n        <div className={p.messag}>{props.message}</div>\r\n    )\r\n}\r\n\r\n\r\n","export type FieldValidatorType = (value: string) => string|undefined\r\nexport const required: FieldValidatorType = (value) => value ? undefined : 'Fild is required'\r\n\r\nexport const maxLength = (maxLength: number): FieldValidatorType => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}\r\n","import React from \"react\";\r\nimport s from './FormControl.module.css'\r\n\r\n\r\nconst FormControl = ({input, meta, ...props}: any) => {\r\n    const metaError = meta.touched && meta.error\r\n    // console.log('',metaError)\r\n    // console.log('meta.touched ',meta.touched)\r\n    return <div className={s.formControl + \" \" + (metaError ? s.error :'')}>\r\n        {/*<textarea {...input}{...props}/>*/}\r\n        {props.children}\r\n        {metaError && <span>{metaError}</span>}\r\n    </div>\r\n}\r\nexport const TextArea = (props: any) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input}{...restProps}/></FormControl>\r\n}\r\nexport const InputForm = (props: any) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input}{...restProps}/></FormControl>\r\n}\r\n","import React from \"react\";\r\nimport p from './Dialogs.module.css'\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLength, required} from \"../../common/validation/validators\";\r\nimport {TextArea} from \"../../common/form/FormControl\";\r\n\r\ntype DialogNickType = { id: number, name: string }\r\ntype MessageType = { id: number, message: string }\r\ntype messagePost = {\r\n    dialogNick: DialogNickType[],\r\n    messages: MessageType[],\r\n    sendMessage: (value: string) => void\r\n    isAuth: boolean}\r\ntype FormType = {addMayPost: string}\r\n\r\nconst textLength100 = maxLength(100)\r\n\r\nexport const Dialogs: React.FC<messagePost> = (props) => {\r\n    const dialogsElements = () =>\r\n        props.dialogNick.map(d => <DialogItem name={d.name} id={d.id}/>)\r\n    const messagesElement = props.messages.map(m => <Message message={m.message}/>)\r\n\r\n    const onSubmit = (value: FormType) => {\r\n        console.log(value)\r\n        props.sendMessage(value.addMayPost)\r\n    }\r\n    return (\r\n        <div className={p.dialogs}>\r\n            <div className={p.itemDialogs}>\r\n                {dialogsElements()}\r\n            </div>\r\n            <div className={p.messages}>\r\n                {messagesElement}\r\n                <LoginReduxForm onSubmit={onSubmit}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddPostForm: React.FC<InjectedFormProps<FormType>> = (props) => {\r\n\r\n    return <>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n            <Field name={'addMayPost'}\r\n                   component={TextArea}\r\n                   validate={[required, textLength100]}\r\n            />\r\n            </div>\r\n        <div>\r\n            <button>add</button>\r\n        </div>\r\n        </form>\r\n    </>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<FormType>({form: 'AddPost'})(AddPostForm)\r\n","export type TYPE_DISPATCH_CREATOR = string\r\ntype ActionPropsType = { type: TYPE_DISPATCH_CREATOR, payload: { value: string }}\r\n\r\nconst addDialogPost = 'addDialogPost'\r\nexport const addDialogCreator = (value: string) => ({type: addDialogPost, payload:{value}})\r\n\r\n\r\ntype InitialStateType = {\r\n    dialogNick: { id: number, name: string }[],\r\n    messages: { id: number, message: string }[]\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    dialogNick: [\r\n        {id: 1, name: 'Anatoliy'},\r\n        {id: 2, name: 'Sergey'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Nikifor'},\r\n        {id: 5, name: 'Arsrniy'},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Hello\"},\r\n        {id: 2, message: \"How are you?\"},\r\n        {id: 3, message: \"I`am learn to React\"},\r\n    ],\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action: ActionPropsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case addDialogPost: {\r\n            let newDialogPost = {id: 3, message: action.payload.value.trim()}\r\n            return {\r\n                ...state,\r\n                messages: state.messages.concat(newDialogPost),\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default dialogsReducer","import React, {ComponentType} from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../Redux/rudux_Store\";\r\n\r\nlet MapStToProps = (state: AppStateType) =>({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withRedirect = (Component: ComponentType) => {\r\n    class RenderComponent extends React.Component<any> {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Navigate to='/login'/>\r\n            }\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedRdComponent = connect(MapStToProps)(RenderComponent)\r\n    return ConnectedRdComponent\r\n}\r\n\r\n","import {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../Redux/rudux_Store\";\r\nimport {addDialogCreator} from \"../../Redux/dialog_reducer\"\r\nimport React, {ComponentType} from \"react\";\r\nimport {withRedirect} from \"../../common/hoc/withRedirect\";\r\nimport {compose, Dispatch } from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (store: AppStateType) => {\r\n    return ({\r\n        dialogNick: store.dialogsPages.dialogNick,\r\n        messages: store.dialogsPages.messages,\r\n    })\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        sendMessage: (value: string) => {\r\n            dispatch(addDialogCreator(value))}\r\n    }\r\n}\r\n// let authRedirectComponent = withRedirect(Dialogs)\r\n//\r\n// export const DialogsItemContainer = connect(mapStateToProps, mapDispatchToProps)(authRedirectComponent)\r\n\r\n\r\nexport default compose<ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRedirect,\r\n)(Dialogs)","import React, { ChangeEvent } from \"react\";\r\n\r\n\r\ntype ProfilePropsType = {\r\n    value: string\r\n    UpDateStatusAPI: (value: string) => void\r\n}\r\n\r\nexport class ProfileStatus extends React.Component<ProfilePropsType> {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.value,\r\n    }\r\n    onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({status: e.currentTarget.value})\r\n    }\r\n    changeEditModeOn() {\r\n        this.setState({editMode: true})\r\n    }\r\n\r\n    changeEditModeOff = () => {\r\n        this.setState({editMode: false})\r\n        this.props.UpDateStatusAPI(this.state.status)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {!this.state.editMode && <div>\r\n                <span\r\n                    onDoubleClick={this.changeEditModeOn.bind(this)}\r\n                > {this.props.value || '--------'} </span>\r\n            </div>}\r\n            {this.state.editMode && <div>\r\n                <input\r\n                    autoFocus={true}\r\n                    onBlur={this.changeEditModeOff}\r\n                    onChange={this.onStatusChange}\r\n                    value={this.state.status}/>\r\n            </div>}\r\n\r\n        </>\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\nimport {ProfileType} from \"../../../Redux/profile_reducer\";\r\nimport {ProfileStatus} from \"./ProfileStatus\";\r\n\r\n\r\ntype ProfileInfoType = {profilePage: ProfileType, status: string, UpDateStatusAPI: (value: string) => void}\r\n\r\nexport const ProfileInfo = (props: ProfileInfoType) => {\r\n    return (\r\n        <div>\r\n            {/*<img src=\"https://upload.wikimedia.org/wikipedia/commons/7/7f/Istanbul_IMG_7257_1725.jpg\"*/}\r\n            {/*     alt=\"\"/>*/}\r\n            <div  className={s.info}>\r\n               {/*<img className={s.photoSmall} src={props.profilePage.photos.small} alt=\"картинка маленькая\"/>*/}\r\n                <img  src={props.profilePage.photos.large} alt=\"картинка большая\"/>\r\n               <div> {props.profilePage.fullName} </div>\r\n                <ProfileStatus\r\n                    value={props.profilePage.status}\r\n                    UpDateStatusAPI={props.UpDateStatusAPI}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport p from './Posts.module.css';\r\n\r\ntype MyPostsMessage = {\r\n    message: string,\r\n    likescounte: number,\r\n}\r\n\r\n\r\nexport const Posts = (props: MyPostsMessage) => {\r\n    return (\r\n        <div className={p.post}>\r\n            <div className={p.item}>\r\n                <img\r\n                    src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTOlaWqOUHlXgQBKHi5jFoXsPTmxDI6SjFVzA&usqp=CAU\"\r\n                    alt=\"\"/>\r\n                {props.message}\r\n                <div><span>like </span>{props.likescounte}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport p from './MyPosts.module.css';\r\nimport {Posts} from \"./Post/Posts\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLength} from \"../../../common/validation/validators\";\r\nimport {TextArea} from \"../../../common/form/FormControl\";\r\n\r\ntype PostType = {id: number, message: string, likescounte: number,}\r\n\r\ntype ProfilePropsType = {\r\n    profilePage: { post: PostType[], newPostText: string }\r\n    addPostProfile: (value: string) => void\r\n}\r\ntype FormInputType = {addMyPost: string}\r\n\r\nconst validateLength10 = maxLength(10)\r\n\r\n\r\nexport const MyPosts = (props: ProfilePropsType) => {\r\n    const postElement = props.profilePage.post.map(p => <Posts key={p.id} message={p.message} likescounte={p.likescounte}/>)\r\n    // let NewPost = React.createRef<HTMLTextAreaElement>()\r\n\r\n    const addMyPost = (value: FormInputType) => {\r\n    props.addPostProfile(value.addMyPost)\r\n    }\r\n    let srcPage = ''\r\n    // const inputTest = (e: ChangeEvent<HTMLInputElement>) => {\r\n    //     // e.target.files[0]\r\n    //     //@ts-ignore\r\n    //     srcPage = e.target.files[0].name\r\n    //     //@ts-ignore\r\n    //     console.log(e.target.files[0].name)\r\n    //     // console.log(e.target.files[0])\r\n    //\r\n    //     // console.log(typeof e.target.files)\r\n    // }\r\n    return (<div>\r\n            <h3>My post</h3>\r\n            <div className={p.addText}>\r\n             <PostReduxForm onSubmit={addMyPost}/>\r\n                {/*<div>ku-ku</div>*/}\r\n                {/*<input type={\"file\"} onChange={inputTest}/>*/}\r\n                {/*<div>{srcPage}<img src={srcPage} alt=\"\"/></div>*/}\r\n            </div>\r\n            <div className={p.post}>\r\n                {postElement}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst MyPostInputForm: React.FC<InjectedFormProps<FormInputType, {}> & {}> = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n       <Field name={'addMyPost'} component={TextArea}\r\n              // validate={[required, validateLength10]}\r\n       />\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n}\r\nconst PostReduxForm = reduxForm<FormInputType> ({form: 'MyPost'})(MyPostInputForm)","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {'API-KEY': \"3c089002-10aa-48c7-80c6-fa863be7bb86\"},\r\n})\r\ntype ResponseLoginType = {\r\n    resultCode: number\r\n    messages: Array<any>,\r\n    data: {\r\n        userId: number\r\n    }\r\n}\r\n// const URL = 'https://social-network.samuraijs.com/api/1.0/'\r\n\r\nexport const UserAPI = {\r\n    getUsers(currentPage: number, totalPageSize: number) {\r\n        return instance.get(`users?page=${currentPage}&count=${totalPageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n    upDateUser(currentPage: number, totalPageSize: number) {\r\n        return instance.get(`users?page=${currentPage}\r\n        &count=${totalPageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow (id: number){\r\n        return instance.post(`follow/${id}`)\r\n            .then(response => response.data.resultCode)\r\n    },\r\n    unFollow(id: number){\r\n        return instance.delete(`follow/${id}`)\r\n            .then(response => response.data.resultCode)\r\n    },\r\n    getProfile(id: number){\r\n        console.warn('Obsolete method. Please ProfileAPI object')\r\n        return instance.get(`profile/${id}`)\r\n    }\r\n}\r\n\r\nexport const ProfileAPI = {\r\n    getProfile(id: number){\r\n        return instance.get(`profile/${id}`)\r\n    },\r\n    getStatus(userID: number){\r\n        return instance.get(`profile/status/${userID}`)\r\n    },\r\n    updateStatus(status:{status: string}){\r\n        return instance.put(`profile/status`, status)\r\n    },\r\n}\r\nexport const authMe = {\r\n    me (){\r\n        return instance.get(`auth/me`,)\r\n            .then(response => response.data)\r\n    },\r\n    loginMe(payload: { email: string, password: string, rememberMe: boolean, captcha?: boolean }){\r\n        // console.log('api: ',payload)\r\n        return instance.post('auth/login',payload)\r\n            .then(response => response.data)\r\n    },\r\n    logUotMe(){\r\n        return instance.delete('auth/login')\r\n            .then(response => response.data)\r\n    },\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {ProfileAPI, UserAPI} from \"../api/api\";\r\n\r\nexport type PostType = { id: number, message: string, likescounte: number, }\r\nexport type ContactType = {\r\n    facebook: string | null,\r\n    website: string | null,\r\n    vk: string | null,\r\n    twitter: string | null,\r\n    instagram: string | null,\r\n    youtube: string | null,\r\n    github: string | null,\r\n    mainLink: string | null,\r\n}\r\nexport type PhotoProfileType = { small: string | undefined, \"large\": string | undefined, }\r\nexport type ProfileType = {\r\n    aboutMe: string | null,\r\n    contacts: ContactType\r\n    lookingForAJob: boolean | null,\r\n    lookingForAJobDescription: string | null,\r\n    fullName: string | null,\r\n    userId: number | null,\r\n    photos: PhotoProfileType,\r\n    post: PostType[],\r\n    newPostText: string,\r\n    status: string,\r\n}\r\nexport type ForProfileServetType = {\r\n    aboutMe: string | null,\r\n    contacts: ContactType\r\n    lookingForAJob: boolean | null,\r\n    lookingForAJobDescription: string | null,\r\n    fullName: string | null,\r\n    userId: number,\r\n    photos: PhotoProfileType,\r\n}\r\nexport type ActionGetStatusUserType = string\r\n\r\nlet initialState: ProfileType = {\r\n    aboutMe: null,\r\n    contacts: <ContactType>{\r\n        facebook: null,\r\n        website: null,\r\n        vk: null,\r\n        twitter: null,\r\n        instagram: null,\r\n        youtube: null,\r\n        github: null,\r\n        mainLink: null,\r\n    },\r\n    lookingForAJob: true,\r\n    lookingForAJobDescription: null,\r\n    fullName: null,\r\n    userId: null,\r\n    photos: <PhotoProfileType>{\r\n        small: undefined,\r\n        large: undefined,\r\n    },\r\n    post: [\r\n        {id: 1, message: \"It's me. What are you doing?\", likescounte: 5},\r\n        {id: 2, message: \"I'am learn\", likescounte: 13},\r\n    ],\r\n    newPostText: '',\r\n    status: '',\r\n}\r\n\r\n\r\ntype ActionReducerType = AddPostProfileType | ChangePostProfileType | SetProfileType | GetUserStatusType\r\nexport type AddPostProfileType = { type: 'addPost', payload: { value: string } }\r\nexport type ChangePostProfileType = { type: 'changePost', action: string }\r\nexport type SetProfileType = { type: 'SET_PROFILE', action: ForProfileServetType }\r\nexport type GetUserStatusType = { type: 'GET_USER_STATUS', action: ActionGetStatusUserType }\r\n\r\n\r\nexport const addPostProfile = (value: string): AddPostProfileType => ({type: 'addPost', payload: {value}})\r\nexport const changePostProfile = (action: string): ChangePostProfileType => ({type: 'changePost', action})\r\nexport const setProfile = (action: ForProfileServetType): SetProfileType => ({type: 'SET_PROFILE', action})\r\nexport const getUserStatus = (action: ActionGetStatusUserType): GetUserStatusType => ({type: 'GET_USER_STATUS', action})\r\n\r\nconst profileReducer = (state: ProfileType = initialState, action: ActionReducerType): ProfileType => {\r\n    switch (action.type) {\r\n        case 'changePost':\r\n            return {...state, newPostText: action.action};\r\n        case 'addPost': {\r\n            let addNewPost = {id: 6, message: action.payload.value, likescounte: 0}\r\n            return {...state, post: [...state.post, addNewPost], newPostText: ''}\r\n        }\r\n        case 'SET_PROFILE':\r\n            return {\r\n                ...state,\r\n                aboutMe: action.action.aboutMe,\r\n                contacts: {...action.action.contacts},\r\n                lookingForAJob: action.action.lookingForAJob,\r\n                lookingForAJobDescription: action.action.lookingForAJobDescription,\r\n                fullName: action.action.fullName,\r\n                userId: action.action.userId,\r\n                photos: {...action.action.photos},\r\n            };\r\n        case 'GET_USER_STATUS':\r\n            return {...state, status: action.action};\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setProfileAPI = (id: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        UserAPI.getProfile(id).then(response => {\r\n            dispatch(setProfile(response.data))\r\n        })\r\n    }\r\n}\r\nexport const getUserStatusAPI = (id: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        ProfileAPI.getStatus(id).then(response => {\r\n            dispatch(getUserStatus(response.data))\r\n        })\r\n    }\r\n}\r\nexport const UpDateStatusAPI = (status: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        ProfileAPI.updateStatus({status})\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(getUserStatus(status))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport default profileReducer\r\n","import {connect} from \"react-redux\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {AppStateType} from \"../../../Redux/rudux_Store\";\r\nimport {addPostProfile} from \"../../../Redux/profile_reducer\";\r\n\r\n\r\n\r\nexport const mapStateToProps = (store: AppStateType) => {\r\n\r\n    return {profilePage: store.profilePage}\r\n}\r\n\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, {addPostProfile})(MyPosts)","import React from 'react';\r\nimport p from './Profile.module.css';\r\nimport '../../App.css'\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../Redux/profile_reducer\";\r\n\r\ntype MapPropsProfileP = {\r\n    addPostProfile: () => void\r\n    changePostProfile: (action: string) => void\r\n    UpDateStatusAPI: (value: string) => void\r\n    profilePage: ProfileType\r\n    status: string\r\n}\r\n\r\nexport const Profile = (props: MapPropsProfileP) => {\r\n\r\n    return (\r\n        <div className={p.content}>\r\n            <ProfileInfo\r\n                profilePage={props.profilePage}\r\n                status={props.status}\r\n                UpDateStatusAPI={props.UpDateStatusAPI}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n","import React, {ComponentType} from \"react\";\r\n\r\nimport {\r\n    useLocation, useMatch,\r\n    useNavigate,\r\n    useParams,\r\n} from \"react-router-dom\";\r\n\r\nfunction withRouter(Component: any) {\r\n    function ComponentWithRouterProp(props: any) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\nexport default withRouter","import React, {ComponentType} from 'react';\r\nimport p from './Profile.module.css';\r\nimport '../../App.css'\r\nimport {Profile} from \"./Profile\";\r\nimport {AppStateType} from \"../../Redux/rudux_Store\";\r\nimport {\r\n    addPostProfile,\r\n    changePostProfile, getUserStatusAPI,\r\n    ProfileType, setProfileAPI, UpDateStatusAPI\r\n} from \"../../Redux/profile_reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport withRouter from \"../../Redux/withRoute\";\r\nimport {withRedirect} from \"../../common/hoc/withRedirect\";\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component<MapPropsProfile\r\n    & { router: { params: { userId: number } } }> {\r\n\r\n    componentDidMount() {\r\n        // debugger\r\n        let id = this.props.router.params.userId\r\n        this.props.setProfileAPI(id)\r\n        if (!this.props.router.params.userId) {\r\n            this.props.auth && this.props.profilePage.userId && (id = this.props.profilePage.userId)\r\n        }\r\n        //@ts-ignore\r\n        // if(!this.props.authID){ this.props.history.push('/login')        }\r\n\r\n        if(this.props.profilePage.userId)\r\n        this.props.setProfileAPI(id)\r\n        this.props.getUserStatusAPI(id)\r\n    }\r\n    componentDidUpdate(prevProps: MapStateProfileProps ) {\r\n        // debugger\r\n        if(this.props.status != prevProps.status){\r\n            // this.setState(this.props.status)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={p.content}>\r\n                <Profile\r\n                    profilePage={this.props.profilePage}\r\n                    changePostProfile={this.props.changePostProfile}\r\n                    addPostProfile={this.props.addPostProfile}\r\n                    status={this.props.status}\r\n                    UpDateStatusAPI={this.props.UpDateStatusAPI}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport type MapStateProfileProps = { profilePage: ProfileType, status: string, auth: boolean, authID: number|null}\r\nexport type MapDispathToProps = {\r\n    addPostProfile: () => void\r\n    changePostProfile: (action: string) => void\r\n    setProfileAPI: (id: number) => void\r\n    getUserStatusAPI: (id: number) => void\r\n    UpDateStatusAPI: (id: string) => void\r\n}\r\nexport type MapPropsProfile = MapStateProfileProps & MapDispathToProps\r\n\r\n\r\nexport const MapStateProfile = (store: AppStateType): MapStateProfileProps => {\r\n    return ({\r\n        profilePage: store.profilePage,\r\n        status: store.profilePage.status,\r\n        auth: store.auth.isAuth,\r\n        authID: store.auth.data.id,\r\n    })\r\n}\r\n// let authRedirectComponent = withRedirect(ProfileContainer)\r\n// let WithRouterProfile = withRouter(authRedirectComponent)\r\n//\r\n// connect(MapStateProfile, {\r\n//     changePostProfile,\r\n//     addPostProfile,\r\n//     setProfileAPI,\r\n// })(WithRouterProfile)\r\n\r\nexport default compose<ComponentType>(\r\n    connect(MapStateProfile, {\r\n        changePostProfile,\r\n        addPostProfile,\r\n        setProfileAPI,\r\n        UpDateStatusAPI,\r\n        getUserStatusAPI,\r\n    }),\r\n    withRouter,\r\n    withRedirect,\r\n)(ProfileContainer)","import {UserAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {AppStateType} from \"./rudux_Store\";\r\n\r\nexport type ItemsType = {\r\n    name: string,\r\n    id: number,\r\n    photos: { small: string | null, large: string | null },\r\n    status: string | null,\r\n    followed: boolean,\r\n}\r\nexport type UseresType = {\r\n    items: ItemsType[]\r\n    totalCount: number,\r\n    error: string | null,\r\n    currentPage: number,\r\n    totalPageSize: number,\r\n    isFetching: boolean,\r\n    followingInProgress: Array<number>\r\n}\r\ntype USER_AC_TYPE = FOLLOW_AC | UN_FOLLOW_AC | SET_USERS_TYPE\r\n    | CHANGE_FETCHING | changeFollowingInProgress\r\n\r\ntype FOLLOW_AC = { type: 'FOLLOW_', id: number }\r\ntype UN_FOLLOW_AC = { type: 'UN_FOLLOW_', id: number }\r\ntype SET_USERS_TYPE = { type: \"SET_USERS\", items: UseresType, currentPage: number }\r\ntype CHANGE_FETCHING = { type: \"CHANGE_Fetching\", isFetching: boolean }\r\ntype changeFollowingInProgress = { type: \"CHANGE_Disabled\", followingInProgress: number, isFetchingD: boolean }\r\n\r\nconst initialState: UseresType = {\r\n    items: [] as ItemsType[],\r\n    totalCount: 0,\r\n    error: null,\r\n    currentPage: 1,\r\n    totalPageSize: 10,\r\n    isFetching: true,\r\n    followingInProgress: [1, 2],\r\n}\r\n\r\nconst userReducer = (state: UseresType = initialState, action: USER_AC_TYPE): UseresType => {\r\n    switch (action.type) {\r\n        case 'FOLLOW_':\r\n            return {\r\n                ...state,\r\n                items: state.items.map(user => {\r\n                    if (user.id === action.id) {\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user\r\n                })\r\n            };\r\n        case 'UN_FOLLOW_':\r\n            return {\r\n                ...state,\r\n                items: state.items.map(us => {\r\n                    if (us.id === action.id) {\r\n                        return {...us, followed: false}\r\n                    }\r\n                    return us\r\n                })\r\n            };\r\n        case \"SET_USERS\":\r\n            return {\r\n                ...state,\r\n                items: [...action.items.items],\r\n                totalCount: action.items.totalCount,\r\n                error: action.items.error,\r\n                currentPage: action.currentPage,\r\n            };\r\n        case \"CHANGE_Fetching\":\r\n            return {...state, isFetching: action.isFetching};\r\n        case \"CHANGE_Disabled\":\r\n            return {\r\n                ...state, followingInProgress:\r\n                    action.isFetchingD ?\r\n                        [action.followingInProgress]\r\n                        : state.followingInProgress.filter(f => f != action.followingInProgress)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const follow = (user_id: number): FOLLOW_AC => ({type: 'FOLLOW_', id: user_id})\r\nexport const unFollow = (user_id: number): UN_FOLLOW_AC => ({type: 'UN_FOLLOW_', id: user_id})\r\nexport const setUsers = (items: UseresType, currentPage: number): SET_USERS_TYPE => ({\r\n    type: \"SET_USERS\",\r\n    items,\r\n    currentPage\r\n})\r\nexport const changeFetching = (isFetching: boolean): CHANGE_FETCHING => ({type: \"CHANGE_Fetching\", isFetching})\r\nexport const changeFollowingInProgress = (followingInProgress: number, isFetchingD: boolean): changeFollowingInProgress => ({\r\n    type: \"CHANGE_Disabled\", followingInProgress, isFetchingD,\r\n})\r\n\r\n\r\nexport const getUsersTC = (currentPage: number, totalPageSize: number) => {\r\n    return (dispatch: Dispatch, getState: () => AppStateType) => {\r\n        dispatch(changeFetching(false))\r\n        UserAPI.getUsers(currentPage+102, totalPageSize)\r\n            .then(response => {\r\n                dispatch(changeFetching(true))\r\n                dispatch(setUsers(response, currentPage))\r\n            })\r\n    }\r\n}\r\nexport const changeFollowUser = (id: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(changeFollowingInProgress(id, true))\r\n        UserAPI.follow(id)\r\n            .then(response => {\r\n                console.log(response)\r\n                dispatch(changeFollowingInProgress(id, false))\r\n                if(response === 0) {dispatch(follow(id))}\r\n                }\r\n            )\r\n    }\r\n}\r\nexport const changeUnFollowUser = (id: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(changeFollowingInProgress(id, true))\r\n        UserAPI.unFollow(id)\r\n            .then(response => {\r\n                console.log(response)\r\n                dispatch(changeFollowingInProgress(id, false))\r\n                if(response === 0) {dispatch(unFollow(id))}\r\n                }\r\n            )\r\n    }\r\n}\r\n\r\n\r\nexport default userReducer","export default __webpack_public_path__ + \"static/media/USERS.ebe73738.svg\";","import React from \"react\";\r\nimport styles from '../users.module.css'\r\nimport USERS from \"../../../img/USERS.svg\";\r\nimport {changeFollowUser, changeUnFollowUser, UseresType} from \"../../../Redux/user_reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport type UserPropsType = MapDispatchToPropsType & MapStateToPropsType\r\nexport type MapStateToPropsType = { users: UseresType, currentPage: number }\r\nexport type MapDispatchToPropsType = {\r\n    upDateUsers: (page: number) => void\r\n    changeFollowUser: (id: number) => void\r\n    changeUnFollowUser: (id: number) => void\r\n}\r\n\r\nexport const Users = (props: UserPropsType) => {\r\n    let pageArr = []\r\n    let totalPages = 10\r\n    // Math.ceil(this.props.items.totalCount / this.props.items.totalPageSize)\r\n    //нужно научится выдавать юзеров порционно\r\n    for (let i = 1; i <= totalPages; i++) {\r\n        pageArr.push(i)\r\n    }\r\n\r\n    const onClockHandler = (page: number) => {\r\n        props.upDateUsers(page)\r\n    }\r\n    return (\r\n        <div>\r\n            {pageArr.map(p => {\r\n                return (<span\r\n                    className={props.currentPage === p ?\r\n                        styles.activePages : styles.notActivePage}\r\n                    key={p}\r\n                    onClick={() => onClockHandler(p)}>{p + ' '}</span>)\r\n            })}\r\n            {\r\n                props.users.items.map(us => <div key={us.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={`/profile/${us.id}`}>\r\n                        <img className={styles.usersPhoto}\r\n                             src={us.photos.small != null ? us.photos.small : USERS} alt=\"\"/>\r\n                        </NavLink>\r\n                        </div>\r\n                    <div>\r\n                        {!us.followed ?\r\n                            <button\r\n                                disabled={props.users.followingInProgress.some(s => s == us.id)}\r\n                                onClick={() => {\r\n                                    props.changeFollowUser(us.id)\r\n                                }\r\n                                }>Follow</button> :\r\n                            <button\r\n                                disabled={props.users.followingInProgress.some(s => s == us.id)}\r\n                                onClick={() => {\r\n                                    props.changeUnFollowUser(us.id)\r\n                                }}>Unfollow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n                    <span>\r\n                    <div>{us.name}</div>\r\n                    <div>{us.status}</div>\r\n                </span>\r\n                    <span>\r\n                    <div>{'us.location.city'}</div>\r\n                    <div>{'us.location.country'}</div>\r\n                </span>\r\n                </div>)\r\n            }</div>\r\n    )\r\n}","import React from \"react\";\r\nimport style from './Preloading.module.css'\r\n\r\nexport const Preloading = () => {\r\n    return <div className={style.loader}>Loading...</div>\r\n}","import {AppStateType} from \"./rudux_Store\";\r\nimport {UseresType} from \"./user_reducer\";\r\n\r\nexport const getUsers = (state: AppStateType): UseresType => state.users\r\nexport const getCurrentPage = (state: AppStateType): number => state.users.currentPage\r\n","import React, {ComponentType} from \"react\";\r\nimport {AppStateType} from \"../../Redux/rudux_Store\";\r\nimport {UseresType, getUsersTC, changeFollowUser, changeUnFollowUser} from \"../../Redux/user_reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Users} from \"./UsersP/Users\";\r\nimport {Preloading} from \"../../common/PreLoading/Preloading\";\r\nimport { compose } from \"redux\";\r\nimport {getCurrentPage, getUsers} from \"../../Redux/user-selectors\";\r\n\r\nexport type OwnProps = {}\r\nexport type UserPropsType = MapDispatchToPropsType & MapStateToPropsType\r\nexport type MapStateToPropsType = { users: UseresType, currentPage: number}\r\nexport type MapDispatchToPropsType = {\r\n    getUsers: (currentPage: number, totalPageSize: number) => void\r\n    changeFollowUser:(id: number) => void\r\n    changeUnFollowUser:(id: number) => void\r\n}\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return ({\r\n        users: getUsers(state),\r\n        currentPage: getCurrentPage(state),\r\n    })\r\n}\r\n\r\nclass UsersAPIContainer extends React.Component<UserPropsType> {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.users.totalPageSize)}\r\n    upDateUsers = (page: number) => {\r\n        this.props.getUsers(page, this.props.users.totalPageSize)}\r\n    render() {\r\n        return <>\r\n            {!this.props.users.isFetching ? < Preloading/> :\r\n                <Users\r\n                    users={this.props.users}\r\n                    currentPage={this.props.currentPage}\r\n                    upDateUsers={this.upDateUsers}\r\n                    changeFollowUser={this.props.changeFollowUser}\r\n                    changeUnFollowUser={this.props.changeUnFollowUser}\r\n                />\r\n            }\r\n        </>\r\n    }\r\n}\r\n// let authRedirectComponent = withRedirect(UsersAPIContainer)\r\n//\r\n// export const UsersContainer = connect<MapStateToPropsType, MapDispatchToPropsType, OwnProps, AppStateType>(mapStateToProps,\r\n//     {\r\n//         getUsers,\r\n//         changeFollowUser,\r\n//         changeUnFollowUser,\r\n//     })(authRedirectComponent)\r\n\r\nexport const UsersContainer = compose<ComponentType>(\r\n    connect<MapStateToPropsType, MapDispatchToPropsType, OwnProps, AppStateType>(mapStateToProps,\r\n        {\r\n            getUsers: getUsersTC,\r\n            changeFollowUser,\r\n            changeUnFollowUser,\r\n        }),)(UsersAPIContainer)","import React from 'react';\r\nimport p from './Header.module.css';\r\nimport '../../App.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype HeaderPropsType = {\r\n    data: {\r\n        id: number | null,\r\n        login: string | null,\r\n        email: string | null,\r\n    },\r\n    isAuth: boolean,\r\n    logUot: () => void\r\n}\r\n\r\nexport const Header = (props: HeaderPropsType) => {\r\n    return (\r\n    <header className={p.header}>\r\n        <div>\r\n            <img\r\n                src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:\r\n                ANd9GcQeCm48YLb7mh4rFyJNq202jtVys3xZlhMQNg&usqp=CAU\"\r\n                alt=\"\"/>\r\n<div className={p.nickName}>\r\n            {props.isAuth\r\n                ? <><div>{props.data.login}</div><button onClick={props.logUot}>Log out</button> </>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n</div>\r\n        </div>\r\n\r\n    </header>);\r\n}","import {Dispatch, Action} from \"redux\";\r\nimport {authMe} from \"../api/api\";\r\nimport { ThunkAction } from 'redux-thunk'\r\nimport {AppStateType} from \"./rudux_Store\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\ntype ThunkType<TAction extends Action<any>> = ThunkAction<Promise<void>, AppStateType, unknown, TAction>\r\n\r\nexport type AuthHeaderType = { type: 'AUTH_ME', action: InitialStateAuthType }\r\ntype ActionAuthType = AuthHeaderType\r\nexport type InitialStateAuthType = {\r\n    \"data\": {\r\n        \"id\": number | null,\r\n        \"login\": string | null,\r\n        \"email\": string | null,\r\n    },\r\n    \"messages\": [],\r\n    \"fieldsErrors\": [],\r\n    \"resultCode\": number\r\n    isAuth: boolean,\r\n}\r\nlet initialStateAuth: InitialStateAuthType = {\r\n    data: {\r\n        id: null,\r\n        login: null,\r\n        email: null,\r\n    },\r\n    messages: [],\r\n    fieldsErrors: [],\r\n    resultCode: 0,\r\n    isAuth: false,\r\n}\r\nconst auth_reducer = (state = initialStateAuth, action: ActionAuthType): InitialStateAuthType => {\r\n    switch (action.type) {\r\n        case'AUTH_ME': {\r\n            return { ...action.action}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthHeader = (state: InitialStateAuthType): AuthHeaderType => ({type: 'AUTH_ME', action: state})\r\nexport default auth_reducer\r\n\r\nexport const checkAuth = () => {\r\n    return (dispatch: Dispatch) => {\r\n        return authMe.me()\r\n            .then(data => {\r\n                if(data.resultCode === 0)\r\n                    dispatch(setAuthHeader({...data, isAuth: true}))\r\n            })\r\n    }\r\n}\r\nexport const setLoginUser = (id: number) => {\r\n    return {\r\n        type: 'Set_Login_User',\r\n        payload: {data: {\r\n                id: id,\r\n                login: null,\r\n                email: null,\r\n            },}}}\r\n\r\nexport const loginUser = (email: string, password: string, rememberMe: boolean) =>\r\n    // : ThunkType<AuthHeaderType>     =>\r\n   async (dispatch: Dispatch) => {\r\n    authMe.loginMe({email, password, rememberMe})\r\n        .then(data => {\r\n            if(data.resultCode === 0) {\r\n                //@ts-ignore\r\n                dispatch(checkAuth())\r\n            }\r\n\r\n            else return dispatch(stopSubmit('Login',{_error: data.messages[0]}))\r\n        })\r\n}\r\nexport const logUot = () => (dispatch: Dispatch) => {\r\n    authMe.logUotMe().then(data =>{\r\n        if(data.resultCode === 0)  dispatch(setAuthHeader({...initialStateAuth, isAuth: false}))\r\n    })\r\n}","import React from 'react';\r\nimport '../../App.css'\r\nimport {Header} from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {checkAuth, InitialStateAuthType, logUot, setAuthHeader} from \"../../Redux/auth_reducer\";\r\nimport {AppStateType} from \"../../Redux/rudux_Store\";\r\n\r\n\r\nclass HeaderContainer extends React.Component<MapToProps> {\r\n    componentDidMount() {\r\n        this.props.checkAuth()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header\r\n                data={this.props.data}\r\n                isAuth={this.props.isAuth}\r\n                logUot={this.props.logUot}\r\n            />)\r\n    }\r\n}\r\n\r\nconst MapStateToPropsHeader = (store: AppStateType): InitialStateAuthType => {\r\n    return store.auth\r\n}\r\nexport type MapDispatchToProps = {\r\n    // setAuthHeader: (state: InitialStateAuthType) => void\r\n    checkAuth: () => void\r\n    logUot: () => void\r\n}\r\nexport type MapStateToProps = InitialStateAuthType\r\nexport type MapToProps = MapDispatchToProps & MapStateToProps\r\n\r\nexport default connect(MapStateToPropsHeader, {checkAuth, logUot})(HeaderContainer);\r\n\r\n\r\n// export const HeaderContainer = connect (MapStateToPropsHeader, {setAuthHeader})(HeaderContainerC)\r\n// export default HeaderContainer","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {InputForm} from \"../../common/form/FormControl\";\r\nimport {maxLength, required} from \"../../common/validation/validators\";\r\nimport s from '../../common/form/FormControl.module.css'\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../Redux/rudux_Store\";\r\nimport {InitialStateAuthType, loginUser} from \"../../Redux/auth_reducer\";\r\n\r\ntype loginUserType = { loginUser: (email: string, password: string, rememberMe: boolean, captcha: boolean) => void }\r\ntype LoginType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\nlet validateLengt30 = maxLength(30)\r\nconst Loginform: React.FC<InjectedFormProps<LoginType>> = (props) => {\r\n    return (\r\n        <div>\r\n            <h1> Login </h1>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div><Field validate={[required, validateLengt30]} name={'email'} placeholder={'Login'}\r\n                            component={InputForm}/></div>\r\n                <div><Field name={'password'} placeholder={'Password'} type={'password'} component={InputForm}\r\n                            validate={[required, validateLengt30]}/></div>\r\n                <div><Field name={'rememberMe'} type={\"checkbox\"} component={InputForm}/>remember me</div>\r\n                <div>\r\n                    <button>Remember me</button> <p/>\r\n                    {props.error && <><div className={s.errorLogin}>{props.error}</div> </>}\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nconst LoginReduxForm = reduxForm<LoginType>({form: 'Login'})(Loginform)\r\n\r\nexport const Login = (props: any) => {\r\n    const onSubmit = (formData: LoginType) => {\r\n        let {email, rememberMe, password} = formData\r\n        props.loginUser(email, password, rememberMe, true)\r\n        //@ts-ignore\r\n    }\r\n    return (\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    )\r\n}\r\ntype MapStateType = {}\r\nconst MapStatToAuthProps = (store: AppStateType):InitialStateAuthType => {\r\n    return store.auth\r\n\r\n}\r\n\r\nexport default connect(MapStatToAuthProps,{ loginUser })(Login)","import {Dispatch, Action} from \"redux\";\r\nimport {authMe} from \"../api/api\";\r\nimport {ThunkAction} from 'redux-thunk'\r\nimport {AppStateType} from \"./rudux_Store\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {checkAuth} from \"./auth_reducer\";\r\n\r\n\r\ntype ThunkType<TAction extends Action<any>> = ThunkAction<Promise<void>, AppStateType, unknown, TAction>\r\n\r\nexport type AuthHeaderType = { type: 'SET_INITIALIZED', action: InitialStateAuthType }\r\ntype ActionAuthType = AuthHeaderType\r\nexport type InitialStateAuthType = {\r\n    initialized: boolean,\r\n}\r\nlet initialStateAuth: InitialStateAuthType = {\r\n    initialized: false\r\n}\r\nconst appReducer = (state = initialStateAuth, action: ActionAuthType): InitialStateAuthType => {\r\n    switch (action.type) {\r\n        case'SET_INITIALIZED': {\r\n            return {...state, ...action.action}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setInitializedSuccessAC = (): AuthHeaderType => ({type: 'SET_INITIALIZED', action: {initialized: true}})\r\nexport default appReducer\r\n\r\nexport const initializaTC = () => (dispatch: Dispatch) => {\r\n    //@ts-ignore\r\n    let promise = dispatch(checkAuth())\r\n    promise.then(() => dispatch(setInitializedSuccessAC()));\r\n}\r\n\r\n\r\n","import React, {ComponentType} from 'react';\r\nimport './App.css';\r\nimport {Navbar} from \"./components/Navbar/Navbar\";\r\nimport {News} from \"./components/News/News\";\r\nimport {Settings} from \"./components/Settings/Settings\";\r\nimport {Route, Routes} from \"react-router-dom\";\r\nimport {Music} from \"./components/Music/Music\";\r\nimport {AppStateType} from \"./Redux/rudux_Store\";\r\nimport DialogsItemContainer from \"./components/Dialogs/DialogsItemContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport { UsersContainer } from './components/Users/UsersContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from \"./components/Header/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport withRouter from \"./Redux/withRoute\";\r\nimport {compose} from \"redux\";\r\nimport {initializaTC} from \"./Redux/app_reducer\";\r\nimport {Preloading} from \"./common/PreLoading/Preloading\";\r\n\r\n\r\n\r\nexport type TYPE_DISPATCH_CREATOR = string\r\n\r\ntype ActionPropsType = {\r\n    type: TYPE_DISPATCH_CREATOR,\r\n    value?: string\r\n}\r\ntype AppDataType = {\r\n    state: AppStateType\r\n    dispatch: (action: ActionPropsType) => void\r\n}\r\n\r\n// (props: AppDataType)\r\nclass App extends React.Component<any> {\r\n    componentDidMount() {\r\n        this.props.initializaTC()\r\n    }\r\n\r\n    render() {\r\n        // debugger\r\n        if(!this.props.initialized){return <Preloading/>}\r\n        return (\r\n            // <BrowserRouter>\r\n                <div className='app-wrapper'>\r\n                    <HeaderContainer/>\r\n                    <Navbar/>\r\n                    <div className={'app-wrapper-content'}>\r\n                        <Routes>\r\n                            <Route path='/login' element={<Login/>}/>\r\n                            <Route path='/'\r\n                                   element={<ProfileContainer/>}/>\r\n                            <Route path={'/profile'} element={<ProfileContainer/>}>\r\n                                <Route path='/profile:userId'\r\n                                       element={<ProfileContainer/>}/>\r\n                            </Route>\r\n                            <Route path='/dialogs'\r\n                                   element={<DialogsItemContainer/>}>\r\n                                <Route path='/dialogs:id'\r\n                                       element={<DialogsItemContainer/>}/>\r\n                            </Route>\r\n                            <Route path='/users' element={<UsersContainer/>}/>\r\n                            <Route path='/news' element={<News/>}/>\r\n                            <Route path='/settings' element={<Settings/>}/>\r\n                            <Route path='/music' element={<Music/>}/>\r\n                        </Routes>\r\n                    </div>\r\n                </div>\r\n            // </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\n// export default App;\r\nconst mapStateAppProps = (store: AppStateType) => ({initialized: store.app.initialized})\r\nexport default compose<ComponentType>(\r\n    withRouter,\r\n    connect(mapStateAppProps, {initializaTC}),\r\n    )\r\n    (App)\r\n\r\n\r\n// <Route path=\"profile\" element={<Profile/>}/>","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile_reducer\";\r\nimport dialogsReducer from \"./dialog_reducer\";\r\nimport userReducer from \"./user_reducer\";\r\nimport auth_reducer from \"./auth_reducer\";\r\nimport thankMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer, {initializaTC} from \"./app_reducer\";\r\n\r\nlet rootReduser = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPages: dialogsReducer,\r\n    users: userReducer,\r\n    auth: auth_reducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n    //siteBar: () => {}\r\n})\r\n\r\n\r\nexport type AppStateType = ReturnType<typeof rootReduser>\r\n\r\nconst store = createStore(rootReduser, applyMiddleware(thankMiddleware))\r\n\r\n//@ts-ignore\r\nwindow.store = store;\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from \"./Redux/rudux_Store\";\r\nimport {Provider} from \"react-redux\";\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nexport const renderEnteerTree = () => {\r\n    ReactDOM.render(\r\n        <Provider store={store}>\r\n            <BrowserRouter>\r\n        <App/>,\r\n            {/*// state={store.getState()}*/}\r\n            {/*// dispatch={store.dispatch.bind(store)}*/}\r\n            </BrowserRouter>\r\n        </Provider>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nrenderEnteerTree()\r\nstore.subscribe(renderEnteerTree)\r\n\r\n// store.subscribe(renderEnteerTree)\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__35iav\",\"error\":\"FormControl_error__YHduq\",\"inputControl\":\"FormControl_inputControl__18CHq\",\"errorLogin\":\"FormControl_errorLogin__3R7Xl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2bVbl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__wEPyW\",\"active\":\"Dialogs_active__3Ir0j\",\"itemDialogs\":\"Dialogs_itemDialogs__1xG0x\",\"messages\":\"Dialogs_messages__1qLzh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPhoto\":\"users_usersPhoto__g3Sqh\",\"activePages\":\"users_activePages__1Q9yI\",\"notActivePage\":\"users_notActivePage__2IePW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemDialogs\":\"DialogsItem_itemDialogs__20vU3\",\"active\":\"DialogsItem_active__1s7-B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"MyPosts_post__2Bqj9\",\"addText\":\"MyPosts_addText__1Lxto\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Posts_content__3o3pC\",\"item\":\"Posts_item__2YUVg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2eVZF\",\"nickName\":\"Header_nickName__1vETf\"};"],"sourceRoot":""}